import dayjs from "dayjs";
import pdfMake from "pdfmake/build/pdfmake";
import pdfFonts from "pdfmake/build/vfs_fonts";
pdfMake.vfs = pdfFonts.default?.pdfMake?.vfs || {};

const exportHoaDonPDF = (donHang, hoaDon, chiTietDonHang, KhuyenMaiList, tongTien) => {
  // üè™ Th√¥ng tin c√¥ng ty v√† ti√™u ƒë·ªÅ
  const content = [
    { text: "H√ìA ƒê∆†N B√ÅN H√ÄNG", style: "header", alignment: "center" },
    { text: "C·ª≠a H√†ng FastFood XYZ", style: "subheader" },
    { text: "123 ƒê∆∞·ªùng ABC, Ph∆∞·ªùng DEF, Th√†nh ph·ªë GHI" },
    { text: "ƒêT: 090xxxxxxx", margin: [0, 0, 0, 10] },
  ];

  // üë§ Th√¥ng tin kh√°ch h√†ng
  const customerInfo = [
    ["Kh√°ch h√†ng:", donHang.maKhachHang? donHang.maKhachHang : ""],
    ["ƒê·ªãa ch·ªâ:", donHang.diaChiGiaoHang || "nh·∫≠n t·∫°i qu·∫ßy"],
    ["Ng√†y ƒë·∫∑t:", dayjs(donHang.ngayDat).format("DD/MM/YYYY HH:mm")],
    ["Ng√†y xu·∫•t Hƒê:", dayjs(hoaDon.ngayXuatHoaDon).format("DD/MM/YYYY HH:mm")],
    ["M√£ ƒë∆°n h√†ng:", donHang.maDonHang],
  ];

  content.push({
    table: {
      body: customerInfo.map(([key, value]) => [
        { text: key, bold: true },
        value,
      ]),
    },
    margin: [0, 10, 0, 10],
  });

  // üõí Danh s√°ch s·∫£n ph·∫©m
  const productColumns = ["T√™n s·∫£n ph·∫©m", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn"];

  // S·ª≠ d·ª•ng chiTietDonHang ƒë·ªÉ t·∫°o productRows
  const productRows = chiTietDonHang.map((item) => [
    item.sanPham?.tenSanPham || "Kh√¥ng x√°c ƒë·ªãnh", // T√™n s·∫£n ph·∫©m
    item.soLuong || 0, // S·ªë l∆∞·ª£ng
    `${item.donGia.toLocaleString()} VND`, // ƒê∆°n gi√°
    `${item.thanhTien.toLocaleString()} VND`, // Th√†nh ti·ªÅn
  ]);

  content.push({
    table: {
      headerRows: 1,
      widths: ["*", "auto", "auto", "auto"],
      body: [productColumns, ...productRows],
    },
    margin: [0, 10, 0, 10],
  });

  // üí∞ T·ªïng ti·ªÅn
  content.push({
    text: "T·ªïng ti·ªÅn:" + donHang.tongGia,
    style: "total",
    alignment: "right",
    margin: [0, 10, 0, 0],
  });
  const khuyenMai = KhuyenMaiList.find(
    (km) => km.maKhuyenMai === hoaDon.maKhuyenMai
  ) || { tenKhuyenMai: "Kh√¥ng c√≥ khuy·∫øn m√£i" };

  if (hoaDon.maKhuyenMai) {
    content.push({
      text: `M√£ gi·∫£m gi√°: ${hoaDon.maKhuyenMai || ""} T√™n: ${khuyenMai.tenKhuyenMai}`,
      style: "total",
      alignment: "right",
      margin: [0, 10, 0, 0],
    });
  }

  content.push({
    text: "T·ªïng thanh to√°n:" + tongTien,
    style: "total",
    alignment: "right",
    margin: [0, 10, 0, 0],
  });

  // üì• Xu·∫•t file PDF
  const pdfDoc = {
    content,
    styles: {
      header: { fontSize: 18, bold: true },
      subheader: { fontSize: 12, bold: true, margin: [0, 5, 0, 5] },
      total: { fontSize: 14, bold: true },
    },
  };

  pdfMake.createPdf(pdfDoc).download("hoa_don_mau.pdf");
};

export default exportHoaDonPDF;
